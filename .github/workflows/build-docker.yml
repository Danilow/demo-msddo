name: Test, Build and Publish to Github Container Registry

on:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:    
      - main

env:
  REGISTRY: 'ghcr.io'
  IMAGE_NAME: 'danilow/msddo-demo'
  DOCKERFILE_PATH: './Dockerfile'
  GDN_RUN_GITHUB: 'true' # When outputting a SARIF file, make the SARIF compliant with GitHub's code scanning requirements
  GDN_RUN_LOGGERACTIONS: 'true' # to enable logging in Github actions format.
    
permissions:
  packages: 'write' # Needed to publish to Github Container Registry's
  contents: 'read'
  security-events: 'write' # Needed to run MSDDO


jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      # Checkout repository
      - name: Checkout
        uses: actions/checkout@v2
      
      # Login to Github Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Extract metadata from Dockerfile
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38

        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ env.DOCKERFILE_PATH }}
  MSDO:
    name: MSDDO Trivy scan on ${{ matrix.os }}
    needs: Build
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
          os: [windows-latest, ubuntu-latest]
    steps:
        # Checkout your code repository to scan
        - uses: actions/checkout@v3

        # Run analyzers
        - name: Run Trivy Image Analysis
          uses: microsoft/security-devops-action@release/vNext
          id: msdo
          env: 
            trivy_action: 'image'
            trivy_target: ${{ needs.Build.outputs.tags }}
          with: 
            tools: 'trivy'
    
        # Upload alerts to the Security tab
        - name: Upload alerts to Security tab
          uses: github/codeql-action/upload-sarif@v2
          with:
            category: 'Trivy image'
            sarif_file: ${{ steps.msdo.outputs.sarifFile }}

        # Upload alerts file as a workflow artifact
        - name: Upload alerts file as a workflow artifact
          uses: actions/upload-artifact@v3
          with:  
            name: alerts
            path: ${{ steps.msdo.outputs.sarifFile }}
